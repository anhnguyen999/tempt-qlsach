@model QuanLySachDatabaseFirst.DataContext.SanPham

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>SanPham</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.TenSP, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TenSP, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TenSP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GiaMua, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GiaMua, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GiaMua, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GiaBan, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GiaBan, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GiaBan, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LoaiSP, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("LoaiSP", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LoaiSP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ChuDe, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ChuDe, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ChuDe, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ThongTin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ThongTin, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ThongTin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GioiTinh, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GioiTinh, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GioiTinh, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NgayNhapHang, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NgayNhapHang, new { htmlAttributes = new { @class = "form-control", type="date" } })
                @Html.ValidationMessageFor(model => model.NgayNhapHang, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HinhAnh, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HinhAnh, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HinhAnh, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>

    <div class="widget-box">
        <div class="widget-title">
            <span class="icon">
                <i class="icon-info-sign"></i>
            </span>
            <h5>Form validation</h5>
        </div>
        <div class="widget-content nopadding">
            <form class="form-horizontal" method="post" action="#" name="basic_validate" id="basic_validate" novalidate="novalidate">
                <div class="control-group">
                    @Html.LabelFor(model => model.TenSP, htmlAttributes: new { @class = "control-label" })
                    <div class="controls">
                        @Html.EditorFor(model => model.TenSP)
                        @Html.ValidationMessageFor(model => model.TenSP)
                    </div>
                </div>
                
                <div class="control-group">
                    @Html.LabelFor(model => model.GiaMua, htmlAttributes: new { @class = "control-label" })
                    <div class="controls">
                        @Html.EditorFor(model => model.GiaMua)
                        @Html.ValidationMessageFor(model => model.GiaMua)
                    </div>
                </div>
                
                <div class="control-group">
                    @Html.LabelFor(model => model.GiaBan, htmlAttributes: new { @class = "control-label" })
                    <div class="controls">
                        @Html.EditorFor(model => model.GiaBan)
                        @Html.ValidationMessageFor(model => model.GiaBan)
                    </div>
                </div>
                
                <div class="control-group">
                    @Html.LabelFor(model => model.LoaiSP, htmlAttributes: new { @class = "control-label" })
                    <div class="controls">
                        @Html.DropDownList("LoaiSP", null, htmlAttributes: new { @class = "" })
                        @Html.ValidationMessageFor(model => model.LoaiSP)
                    </div>
                </div>
                
                <div class="control-group">
                    @Html.LabelFor(model => model.TenSP, htmlAttributes: new { @class = "control-label" })
                    <div class="controls">
                        @Html.EditorFor(model => model.TenSP)
                        @Html.ValidationMessageFor(model => model.TenSP)
                    </div>
                </div>
                
                <div class="control-group">
                    @Html.LabelFor(model => model.TenSP, htmlAttributes: new { @class = "control-label" })
                    <div class="controls">
                        @Html.EditorFor(model => model.TenSP)
                        @Html.ValidationMessageFor(model => model.TenSP)
                    </div>
                </div>
                
                <div class="control-group">
                    @Html.LabelFor(model => model.TenSP, htmlAttributes: new { @class = "control-label" })
                    <div class="controls">
                        @Html.EditorFor(model => model.TenSP)
                        @Html.ValidationMessageFor(model => model.TenSP)
                    </div>
                </div>
                
                <div class="control-group">
                    @Html.LabelFor(model => model.TenSP, htmlAttributes: new { @class = "control-label" })
                    <div class="controls">
                        @Html.EditorFor(model => model.TenSP)
                        @Html.ValidationMessageFor(model => model.TenSP)
                    </div>
                </div>
                
                <div class="control-group">
                    @Html.LabelFor(model => model.TenSP, htmlAttributes: new { @class = "control-label" })
                    <div class="controls">
                        @Html.EditorFor(model => model.TenSP)
                        @Html.ValidationMessageFor(model => model.TenSP)
                    </div>
                </div>
                
                <div class="form-actions">
                    <input type="submit" value="Validate" class="btn btn-success">
                </div>
            </form>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
